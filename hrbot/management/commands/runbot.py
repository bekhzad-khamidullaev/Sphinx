# hrbot/management/commands/runbot.py
import logging
import asyncio
from django.core.management.base import BaseCommand
from django.conf import settings

# –ò—Å–ø–æ–ª—å–∑—É–µ–º Application –∏–∑ python-telegram-bot v20+
from telegram.ext import Application, ApplicationBuilder, Defaults
from telegram import Update
from telegram.constants import ParseMode

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç, —Ç.–∫. registration –≤ –ø–æ–¥–ø–∞–ø–∫–µ bot
from hrbot.bot.registration import setup_handlers

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    # encoding='utf-8' # –£–∫–∞–∑—ã–≤–∞–π—Ç–µ, –µ—Å–ª–∏ –≤—ã–≤–æ–¥–∏—Ç–µ –≤ —Ñ–∞–π–ª –∏–ª–∏ –¥–ª—è Windows –∫–æ–Ω—Å–æ–ª–∏
)
# –ü–æ–Ω–∏–∂–∞–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è httpx –∏ httpcore, —á—Ç–æ–±—ã –Ω–µ –∑–∞—Å–æ—Ä—è—Ç—å –≤—ã–≤–æ–¥
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("httpcore").setLevel(logging.WARNING)

logger = logging.getLogger(__name__) # –õ–æ–≥–≥–µ—Ä –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ HR Bot'

    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã."""
        logger.info("Starting runbot command...")

        token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
        if not token:
            logger.critical("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Django!")
            self.stderr.write(self.style.ERROR("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Django!"))
            return

        try:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –±–æ—Ç–∞
            defaults = Defaults(parse_mode=ParseMode.MARKDOWN) # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º Markdown

            # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            application = (
                ApplicationBuilder()
                .token(token)
                .defaults(defaults) # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                # .persistence(...) # –î–æ–±–∞–≤—å—Ç–µ persistence, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                # .concurrent_updates(True) # –ú–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                .build()
            )

            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            setup_handlers(application)

            logger.info("HR Bot application configured. Starting polling...")
            self.stdout.write(self.style.SUCCESS("üöÄ HR-–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..."))

            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–ø—Ä–æ—Å–∞ (polling)
            application.run_polling(allowed_updates=Update.ALL_TYPES)

            logger.info("HR Bot polling stopped.")
            self.stdout.write(self.style.SUCCESS("HR-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."))

        except ValueError as e: # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω
             logger.critical(f"Configuration error: {e}")
             self.stderr.write(self.style.ERROR(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}"))
        except ImportError as e:
             logger.critical(f"Import error during setup: {e}")
             self.stderr.write(self.style.ERROR(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ: {e}"))
        except Exception as e:
            logger.exception("An unexpected error occurred while running the bot.")
            self.stderr.write(self.style.ERROR(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}"))