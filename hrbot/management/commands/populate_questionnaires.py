# hrbot/management/commands/populate_questionnaires.py

from django.core.management.base import BaseCommand, CommandError
from django.db import transaction
from hrbot.models import Questionnaire, Question

class Command(BaseCommand):
    help = 'Создает/обновляет начальные опросники и вопросы для HR-бота'

    QUESTIONNAIRES_DATA = {
        # --- Оценки сотрудников (общие и по должностям) ---
        "Общая оценка сотрудника (ежеквартальная)": [
            {'text': "Оцените общую производительность сотрудника за последний квартал.", 'options': ["1", "2", "3", "4", "5"]},
            {'text': "Насколько хорошо сотрудник справляется с поставленными задачами?", 'options': ["Плохо", "Удовлетворительно", "Хорошо", "Отлично"]},
            {'text': "Оцените инициативность сотрудника.", 'options': ["Низкая", "Средняя", "Высокая"]},
            {'text': "Как вы оцениваете навыки коммуникации сотрудника с коллегами?", 'options': ["Плохо", "Удовлетворительно", "Хорошо", "Отлично"]},
            {'text': "Соблюдает ли сотрудник дедлайны?", 'options': ["Почти никогда", "Иногда", "Часто", "Всегда"]},
            {'text': "Есть ли у сотрудника потенциал для роста в компании?", 'options': ["Нет", "Возможно", "Да"]},
            {'text': "Какие сильные стороны сотрудника вы бы выделили?", 'options': None}, # Свободный ответ
            {'text': "Над какими аспектами сотруднику стоит поработать?", 'options': None},
            {'text': "Дополнительные комментарии или пожелания.", 'options': None},
        ],
        "Оценка работы Кассира": [
            {'text': "Насколько вежливо кассир общается с гостями?", 'options': ["Грубо", "Нейтрально", "Вежливо", "Очень вежливо"]},
            {'text': "Как быстро и точно кассир обрабатывает заказы?", 'options': ["Медленно, с ошибками", "Медленно, без ошибок", "Быстро, с ошибками", "Быстро, без ошибок"]},
            {'text': "Соблюдает ли кассир стандарты работы с кассой и отчетностью?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Умеет ли кассир предлагать дополнительные товары (апсейл)?", 'options': ["Нет", "Редко", "Иногда", "Активно"]},
            {'text': "Как кассир справляется с конфликтными ситуациями или жалобами?", 'options': ["Плохо", "Удовлетворительно", "Хорошо"]},
            {'text': "Опрятен ли внешний вид кассира?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Общая оценка работы кассира за последнюю неделю.", 'options': ["1", "2", "3", "4", "5"]},
        ],
        "Оценка работы Повара": [
            {'text': "Насколько качественно повар готовит блюда согласно стандартам?", 'options': ["Низкое", "Среднее", "Высокое", "Отличное"]},
            {'text': "Соблюдает ли повар санитарные нормы и правила гигиены на кухне?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Как быстро повар отдает заказы?", 'options': ["Медленно", "Нормально", "Быстро"]},
            {'text': "Умеет ли повар работать в команде с другими сотрудниками кухни?", 'options': ["Нет", "Сложно", "Да"]},
            {'text': "Поддерживает ли повар чистоту и порядок на рабочем месте?", 'options': ["Нет", "Иногда", "Да"]},
            {'text': "Проявляет ли повар ответственность при работе с продуктами?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Общая оценка работы повара за последнюю неделю.", 'options': ["1", "2", "3", "4", "5"]},
        ],
        "Оценка Менеджера смены": [
            {'text': "Насколько эффективно менеджер организует работу смены?", 'options': ["1", "2", "3", "4", "5"]},
            {'text': "Как менеджер контролирует соблюдение стандартов сотрудниками?", 'options': ["Слабо", "Периодически", "Постоянно"]},
            {'text': "Умеет ли менеджер мотивировать команду?", 'options': ["Нет", "Иногда", "Да"]},
            {'text': "Как менеджер решает возникающие операционные проблемы?", 'options': ["Медленно", "Эффективно", "Проактивно"]},
            {'text': "Насколько хорошо менеджер владеет процедурами открытия/закрытия ресторана?", 'options': ["Плохо", "Удовлетворительно", "Хорошо", "Отлично"]},
            {'text': "Оцените навыки коммуникации менеджера с командой и руководством.", 'options': ["1", "2", "3", "4", "5"]},
            {'text': "Общая оценка работы менеджера смены.", 'options': ["1", "2", "3", "4", "5"]},
        ],
         "Оценка Курьера": [
            {'text': "Насколько быстро курьер доставляет заказы?", 'options': ["Медленнее ожидаемого", "В срок", "Быстрее ожидаемого"]},
            {'text': "Соблюдает ли курьер стандарты внешнего вида и вежливости?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Бережно ли курьер обращается с доставляемыми заказами?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Хорошо ли курьер ориентируется в зоне доставки?", 'options': ["Плохо", "Удовлетворительно", "Хорошо"]},
            {'text': "Возникали ли жалобы от клиентов на работу курьера?", 'options': ["Да, часто", "Да, редко", "Нет"]},
            {'text': "Общая оценка работы курьера.", 'options': ["1", "2", "3", "4", "5"]},
        ],
         "Оценка IT-специалиста (Общая)": [
            {'text': "Насколько оперативно специалист реагирует на заявки и инциденты?", 'options': ["Медленно", "В разумные сроки", "Быстро"]},
            {'text': "Оцените качество решения технических проблем.", 'options': ["Низкое", "Среднее", "Высокое"]},
            {'text': "Насколько понятно специалист объясняет технические вопросы?", 'options': ["Непонятно", "Терпимо", "Понятно"]},
            {'text': "Проявляет ли специалист инициативу в улучшении IT-инфраструктуры?", 'options': ["Нет", "Иногда", "Да"]},
            {'text': "Оцените навыки документирования работы.", 'options': ["Отсутствуют", "Удовлетворительные", "Хорошие"]},
            {'text': "Общая оценка работы IT-специалиста.", 'options': ["1", "2", "3", "4", "5"]},
        ],
        # --- Оценки на испытательном сроке ---
        "Оценка на испытательном сроке (1-й месяц)": [
            {'text': "Как быстро сотрудник освоил основные рабочие процессы?", 'options': ["Медленно", "Средне", "Быстро"]},
            {'text': "Проявляет ли сотрудник интерес к обучению и задает вопросы?", 'options': ["Нет", "Редко", "Да"]},
            {'text': "Как складываются отношения сотрудника с коллегами?", 'options': ["Плохо", "Нейтрально", "Хорошо"]},
            {'text': "Соблюдает ли сотрудник график и правила внутреннего распорядка?", 'options': ["Нет", "Не всегда", "Да"]},
            {'text': "Видите ли вы потенциал у сотрудника для дальнейшей работы?", 'options': ["Нет", "Сомневаюсь", "Да"]},
            {'text': "Общие впечатления за первый месяц.", 'options': None},
        ],
        "Оценка на испытательном сроке (Финал)": [
            {'text': "Оцените уровень самостоятельности сотрудника в выполнении задач.", 'options': ["Низкий", "Средний", "Высокий"]},
            {'text': "Соответствуют ли навыки и знания сотрудника требованиям должности?", 'options': ["Нет", "Частично", "Да"]},
            {'text': "Насколько сотрудник интегрировался в команду?", 'options': ["Плохо", "Удовлетворительно", "Хорошо"]},
            {'text': "Оцените качество выполняемой работы.", 'options': ["Низкое", "Среднее", "Высокое"]},
            {'text': "Готов ли сотрудник к постоянной работе в компании?", 'options': ["Нет", "Требует доработки", "Да"]},
            {'text': "Рекомендации по дальнейшему развитию сотрудника.", 'options': None},
            {'text': "Рекомендуете ли вы принять сотрудника на постоянную работу?", 'options': ["Нет", "Да, с условиями", "Да"]},
        ],
        # --- Общие опросы (не оценка конкретного сотрудника) ---
        "Удовлетворенность условиями труда": [
            {'text': "Насколько вы удовлетворены своим рабочим местом?", 'options': ["1", "2", "3", "4", "5"]},
            {'text': "Устраивает ли вас график работы?", 'options': ["Нет", "Частично", "Да"]},
            {'text': "Считаете ли вы уровень своей заработной платы справедливым?", 'options': ["Нет", "Скорее нет", "Скорее да", "Да"]},
            {'text': "Как вы оцениваете атмосферу в коллективе?", 'options': ["Плохая", "Удовлетворительная", "Хорошая", "Отличная"]},
            {'text': "Есть ли у вас возможности для профессионального роста?", 'options': ["Нет", "Мало", "Достаточно"]},
            {'text': "Что бы вы хотели улучшить в условиях работы?", 'options': None},
        ],
        "Обратная связь по корпоративу": [
            {'text': "Понравился ли вам последний корпоратив?", 'options': ["Нет", "Скорее нет", "Скорее да", "Да"]},
            {'text': "Что вам понравилось больше всего?", 'options': None},
            {'text': "Что можно было бы улучшить?", 'options': None},
            {'text': "Предложите идеи для следующего мероприятия.", 'options': None},
        ]
    }

    @transaction.atomic
    def handle(self, *args, **options):
        self.stdout.write("Создание/обновление опросников и вопросов...")
        created_qsets_count = 0
        created_questions_count = 0
        updated_questions_count = 0
        found_qsets_count = 0

        for qset_name, questions_data in self.QUESTIONNAIRES_DATA.items():
            questionnaire, qset_created = Questionnaire.objects.update_or_create(
                name=qset_name,
                defaults={'description': f"Опросник: {qset_name}", 'is_active': True} # Убрали кавычки
            )
            action = "Создан" if qset_created else "Найден"
            self.stdout.write(f"  {action} опросник: '{qset_name}'")
            if qset_created: created_qsets_count += 1

            # Обновляем статус активности на всякий случай, если он уже существовал
            if not qset_created and not questionnaire.is_active:
                 questionnaire.is_active = True
                 questionnaire.save(update_fields=['is_active'])
                 self.stdout.write(f"    Активирован опросник: '{qset_name}'")

            current_order = 1
            # Сохраняем существующие тексты вопросов для быстрой проверки
            existing_texts = set(questionnaire.questions.values_list('text', flat=True))

            for q_data in questions_data:
                q_text = q_data['text']
                q_options = q_data.get('options') # Может быть None

                # Используем update_or_create для вопроса
                question, q_created = Question.objects.update_or_create(
                    questionnaire=questionnaire,
                    text=q_text, # Ищем по тексту и опроснику
                    defaults={
                        'order': current_order,
                        'answer_options': q_options
                    }
                )

                if q_created:
                    self.stdout.write(f"    + Добавлен вопрос: '{q_text[:50]}...' (Порядок: {current_order})")
                    created_questions_count += 1
                else:
                    # Проверяем, изменились ли опции или порядок
                    updated_fields = []
                    if question.order != current_order:
                        question.order = current_order
                        updated_fields.append('order')
                    # Сравниваем JSON осторожно
                    if json_needs_update(question.answer_options, q_options):
                        question.answer_options = q_options
                        updated_fields.append('answer_options')

                    if updated_fields:
                        question.save(update_fields=updated_fields)
                        self.stdout.write(f"    * Обновлен вопрос: '{q_text[:50]}...' (Порядок: {current_order}, Опции изменены: {'answer_options' in updated_fields})")
                        updated_questions_count += 1

                current_order += 1

        total_processed_qsets = created_qsets_count + found_qsets_count # Общее количество обработанных
        self.stdout.write(self.style.SUCCESS(
            f"✅ Завершено. Обработано {total_processed_qsets} опросников ({created_qsets_count} создано). "
            f"Создано {created_questions_count} новых вопросов. "
            f"Обновлено {updated_questions_count} существующих вопросов."
        ))

def json_needs_update(current_json, new_json):
    """Сравнивает два JSON объекта (или None) для определения необходимости обновления."""
    # Считаем None и пустой список/словарь эквивалентными отсутствию опций
    current_is_empty = current_json is None or (isinstance(current_json, (list, dict)) and not current_json)
    new_is_empty = new_json is None or (isinstance(new_json, (list, dict)) and not new_json)

    if current_is_empty and new_is_empty:
        return False # Оба пустые, обновлять не надо
    if current_is_empty != new_is_empty:
        return True # Один пустой, другой нет - обновляем

    # Если оба не пустые, сравниваем содержимое
    return current_json != new_json