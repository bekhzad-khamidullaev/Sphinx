# Generated by Django 5.1 on 2025-04-29 09:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tasks', '0009_alter_task_start_date'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChecklistTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название шаблона')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, help_text='Активные шаблоны доступны для выполнения.', verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checklist_templates', to='tasks.taskcategory', verbose_name='Категория (из Задач)')),
            ],
            options={
                'verbose_name': 'Шаблон чеклиста',
                'verbose_name_plural': 'Шаблоны чеклистов',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performed_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Дата/Время выполнения')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Местоположение/Зона')),
                ('notes', models.TextField(blank=True, verbose_name='Общие примечания')),
                ('is_complete', models.BooleanField(db_index=True, default=False, verbose_name='Завершен')),
                ('completion_time', models.DateTimeField(blank=True, null=True, verbose_name='Время завершения')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_checklists', to=settings.AUTH_USER_MODEL, verbose_name='Кем выполнен')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checklists', to='tasks.task', verbose_name='Связанная задача')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='runs', to='checklists.checklisttemplate', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Выполненный чеклист (прогон)',
                'verbose_name_plural': 'Выполненные чеклисты (прогоны)',
                'ordering': ['-performed_at'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistTemplateItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_text', models.CharField(max_length=500, verbose_name='Текст пункта/вопроса')),
                ('order', models.PositiveIntegerField(default=0, help_text='Порядок отображения пункта в чеклисте.', verbose_name='Порядок')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='checklists.checklisttemplate', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Пункт шаблона чеклиста',
                'verbose_name_plural': 'Пункты шаблонов чеклистов',
                'ordering': ['template', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('ok', 'OK'), ('not_ok', 'Не OK'), ('na', 'Неприменимо')], default='pending', max_length=20, verbose_name='Статус/Результат')),
                ('comments', models.TextField(blank=True, verbose_name='Комментарий к пункту')),
                ('recorded_at', models.DateTimeField(auto_now=True, verbose_name='Время записи результата')),
                ('checklist_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='checklists.checklist', verbose_name='Прогон чеклиста')),
                ('template_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='checklists.checklisttemplateitem', verbose_name='Пункт шаблона')),
            ],
            options={
                'verbose_name': 'Результат пункта чеклиста',
                'verbose_name_plural': 'Результаты пунктов чеклистов',
                'ordering': ['checklist_run', 'template_item__order'],
            },
        ),
        migrations.AddIndex(
            model_name='checklist',
            index=models.Index(fields=['performed_at'], name='checklists__perform_e6c7a4_idx'),
        ),
        migrations.AddIndex(
            model_name='checklist',
            index=models.Index(fields=['template'], name='checklists__templat_3eb993_idx'),
        ),
        migrations.AddIndex(
            model_name='checklist',
            index=models.Index(fields=['performed_by'], name='checklists__perform_f00ef6_idx'),
        ),
        migrations.AddIndex(
            model_name='checklist',
            index=models.Index(fields=['is_complete'], name='checklists__is_comp_365067_idx'),
        ),
        migrations.AddIndex(
            model_name='checklistresult',
            index=models.Index(fields=['checklist_run', 'template_item'], name='checklists__checkli_ded83f_idx'),
        ),
        migrations.AddIndex(
            model_name='checklistresult',
            index=models.Index(fields=['status'], name='checklists__status_d0144d_idx'),
        ),
        migrations.AddConstraint(
            model_name='checklistresult',
            constraint=models.UniqueConstraint(fields=('checklist_run', 'template_item'), name='unique_result_per_item_run'),
        ),
    ]
