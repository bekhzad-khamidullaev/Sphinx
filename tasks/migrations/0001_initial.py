<<<<<<< HEAD
# Generated by Django 5.1 on 2025-06-15 23:30
=======
# Generated by Django 5.1 on 2025-05-11 16:43
>>>>>>> servicedesk

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_profiles', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
<<<<<<< HEAD
                ('name', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='название проекта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание проекта')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='дата завершения')),
                ('is_active', models.BooleanField(default=True, verbose_name='активен')),
                ('owner', models.ForeignKey(blank=True, help_text='Пользователь, управляющий проектом и его настройками.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_projects', to=settings.AUTH_USER_MODEL, verbose_name='владелец проекта')),
=======
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название проекта')),
                ('description', models.TextField(blank=True, verbose_name='Описание проекта')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата завершения')),
>>>>>>> servicedesk
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ['name', '-created_at'],
<<<<<<< HEAD
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('task_number', models.CharField(blank=True, db_index=True, max_length=40, unique=True, verbose_name='Номер задачи')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('description', models.TextField(blank=True, verbose_name='Описание задачи')),
                ('status', models.CharField(choices=[('backlog', 'Бэклог'), ('new', 'Новая'), ('in_progress', 'В работе'), ('on_hold', 'Отложена'), ('completed', 'Выполнена'), ('cancelled', 'Отменена'), ('overdue', 'Просрочена')], db_index=True, default='new', max_length=20, verbose_name='Статус')),
                ('priority', models.IntegerField(choices=[(5, 'Низкий'), (4, 'Ниже среднего'), (3, 'Средний'), (2, 'Выше среднего'), (1, 'Высокий')], db_index=True, default=3, verbose_name='Приоритет')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата начала')),
                ('due_date', models.DateField(blank=True, db_index=True, help_text='Планируемая дата завершения задачи.', null=True, verbose_name='срок выполнения')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('estimated_time', models.DurationField(blank=True, null=True, verbose_name='Оценка времени (план)')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Инициатор')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='user_profiles.department', verbose_name='Отдел')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.project', verbose_name='Проект')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='user_profiles.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['priority', 'due_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('role', models.CharField(choices=[('responsible', 'Ответственный'), ('executor', 'Исполнитель'), ('watcher', 'Наблюдатель'), ('reporter', 'Автор/Заявитель')], max_length=20, verbose_name='Роль')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_task_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Кем назначено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='tasks.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Назначение задачи',
                'verbose_name_plural': 'Назначения задач',
                'ordering': ['task', 'role', 'user__username'],
=======
                'indexes': [models.Index(fields=['name'], name='project_name_idx')],
>>>>>>> servicedesk
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, verbose_name='Описание категории')),
            ],
            options={
                'verbose_name': 'Категория задач',
                'verbose_name_plural': 'Категории задач',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='taskcategory_name_idx')],
<<<<<<< HEAD
            },
        ),
        migrations.AddField(
            model_name='task',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.taskcategory', verbose_name='Категория'),
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Комментарий к задаче',
                'verbose_name_plural': 'Комментарии к задачам',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('photo', models.ImageField(upload_to='task_photos/', verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание фотографии')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='tasks.task', verbose_name='Задача')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_task_photos', to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Фотография к задаче',
                'verbose_name_plural': 'Фотографии к задачам',
                'ordering': ['created_at'],
=======
>>>>>>> servicedesk
            },
        ),
        migrations.CreateModel(
            name='TaskSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название подкатегории')),
                ('description', models.TextField(blank=True, verbose_name='Описание подкатегории')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='tasks.taskcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Подкатегория задач',
                'verbose_name_plural': 'Подкатегории задач',
                'ordering': ['category__name', 'name'],
            },
        ),
<<<<<<< HEAD
        migrations.AddField(
            model_name='task',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.tasksubcategory', verbose_name='Подкатегория'),
        ),
        migrations.AddIndex(
            model_name='project',
            index=models.Index(fields=['name'], name='project_name_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['task', 'user'], name='tasks_taska_task_id_bf9d8a_idx'),
        ),
        migrations.AddIndex(
            model_name='taskassignment',
            index=models.Index(fields=['task', 'role'], name='tasks_taska_task_id_f090c2_idx'),
        ),
        migrations.AddConstraint(
            model_name='taskassignment',
            constraint=models.UniqueConstraint(fields=('task', 'user'), name='unique_user_assignment_per_task'),
        ),
        migrations.AddIndex(
            model_name='taskcomment',
            index=models.Index(fields=['task', 'created_at'], name='tasks_taskc_task_id_3f97e8_idx'),
        ),
        migrations.AddIndex(
            model_name='taskphoto',
            index=models.Index(fields=['task'], name='taskphoto_task_idx'),
=======
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('task_number', models.CharField(blank=True, db_index=True, max_length=30, unique=True, verbose_name='Номер задачи')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('description', models.TextField(blank=True, verbose_name='Описание задачи')),
                ('status', models.CharField(choices=[('new', 'Новая'), ('in_progress', 'В работе'), ('on_hold', 'Отложена'), ('completed', 'Выполнена'), ('cancelled', 'Отменена'), ('overdue', 'Просрочена')], db_index=True, default='new', max_length=20, verbose_name='Статус')),
                ('priority', models.IntegerField(choices=[(5, 'Низкий'), (4, 'Ниже среднего'), (3, 'Средний'), (2, 'Выше среднего'), (1, 'Высокий')], db_index=True, default=3, verbose_name='Приоритет')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата начала')),
                ('deadline', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Срок выполнения')),
                ('completion_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('estimated_time', models.DurationField(blank=True, null=True, verbose_name='Оценка времени (план)')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='user_profiles.department', verbose_name='Отдел')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.project', verbose_name='Проект')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='user_profiles.team', verbose_name='Команда')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.taskcategory', verbose_name='Категория')),
                ('subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.tasksubcategory', verbose_name='Подкатегория')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['priority', 'deadline', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('role', models.CharField(choices=[('responsible', 'Ответственный'), ('executor', 'Исполнитель'), ('watcher', 'Наблюдатель')], max_length=20, verbose_name='Роль')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_task_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Кем назначено')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='tasks.task', verbose_name='Задача')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Назначение задачи',
                'verbose_name_plural': 'Назначения задач',
                'ordering': ['task', 'role', 'user__username'],
                'indexes': [models.Index(fields=['task', 'user'], name='tasks_taska_task_id_bf9d8a_idx'), models.Index(fields=['task', 'role'], name='tasks_taska_task_id_f090c2_idx')],
                'constraints': [models.UniqueConstraint(fields=('task', 'user'), name='unique_user_assignment_per_task')],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'Комментарий к задаче',
                'verbose_name_plural': 'Комментарии к задачам',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['task', 'created_at'], name='tasks_taskc_task_id_3f97e8_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaskPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('photo', models.ImageField(upload_to='task_photos/', verbose_name='Фотография')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание фотографии')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='tasks.task', verbose_name='Задача')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_task_photos', to=settings.AUTH_USER_MODEL, verbose_name='Загрузил')),
            ],
            options={
                'verbose_name': 'Фотография к задаче',
                'verbose_name_plural': 'Фотографии к задачам',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['task'], name='taskphoto_task_idx')],
            },
>>>>>>> servicedesk
        ),
        migrations.AddIndex(
            model_name='tasksubcategory',
            index=models.Index(fields=['name'], name='subcat_name_idx'),
        ),
        migrations.AddConstraint(
            model_name='tasksubcategory',
            constraint=models.UniqueConstraint(fields=('category', 'name'), name='unique_subcategory_per_category'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['task_number'], name='task_task_number_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='task_status_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['priority'], name='task_priority_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
<<<<<<< HEAD
            index=models.Index(fields=['due_date'], name='task_due_date_idx'),
=======
            index=models.Index(fields=['deadline'], name='task_deadline_idx'),
>>>>>>> servicedesk
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project'], name='task_project_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['created_by'], name='task_creator_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['team'], name='task_team_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['department'], name='task_department_idx'),
        ),
    ]
